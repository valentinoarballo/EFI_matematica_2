dataframemodelo <- data.frame(DateDB = seq(max_fecha + 1, by = "day", length.out = 5))
prediccion <- predict(model, dataframemodelo)
prediccion
dataframeresultante <- data.frame(DateDB = dataframemodelo$DateDB, Price = prediccion)
dataframeresultante
# Creo un data frame con los datos anteriormente recuperados
data <- data.frame(Price,DateDB)
data
dataframeresultante <- data.frame(DateDB, Price = prediccion$DateDB = dataframemodelo)
dataframeresultante <- data.frame(DateDB, Price = prediccion$DateDB = dataframemodelo)
dataframeresultante <- data.frame(Price = prediccion, DateDB = dataframemodelo$DateDB)
dataframeresultante
data
prediccionGrafico <- rbind(data, dataframeresultante)
prediccionGrafico
data
prediccionGrafico
ggplot(data=prediccionGrafico, aes(x=DateDB, y=Price)) +
geom_point(size = 0.1) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Puntos de precio de produccion de hardware en estados unidos frente a el paso del tiempo",
x = "Fecha",
y = "Indice de precios de produccion") +
theme_light()
# Hago el grafico de regresion lineal
ggplot(data=data, aes(x=DateDB, y=Price)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 0.1) +
labs(title = "Puntos de precio de produccion de hardware en estados unidos frente a el paso del tiempo",
x = "Fecha",
y = "Indice de precios de produccion") +
theme_light()
ggplot(data=prediccionGrafico, aes(x=DateDB, y=Price)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 0.1) +
labs(title = "Puntos de precio de produccion de hardware en estados unidos frente a el paso del tiempo",
x = "Fecha",
y = "Indice de precios de produccion") +
theme_light()
ggplot(data=prediccionGrafico, aes(x=DateDB, y=Price)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 2) +
labs(title = "Puntos de precio de produccion de hardware en estados unidos frente a el paso del tiempo",
x = "Fecha",
y = "Indice de precios de produccion") +
theme_light()
ggplot(data=prediccionGrafico, aes(x=DateDB, y=Price)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Puntos de precio de produccion de hardware en estados unidos frente a el paso del tiempo",
x = "Fecha",
y = "Indice de precios de produccion") +
theme_light()
# Recupero las fechas y los indices de precios de produccion
namedb <- (DB$name)
sellerdb <- (DB$seller)
actualPricedb <- (DB$actual_price)
# Hago el grafico de regresion lineal
ggplot(data=data, aes(x=DateDB, y=Price)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 0.1) +
labs(title = namedb[4],
x = "Fecha",
y = paste("Precio en la tienda ",sellerdb[4])) +
theme_light()
ggplot(data=prediccionGrafico, aes(x=DateDB, y=Price)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Puntos de precio de produccion de hardware en estados unidos frente a el paso del tiempo",
x = "Fecha",
y = "Indice de precios de produccion") +
theme_light()
ggplot(data=prediccionGrafico, aes(x=DateDB, y=Price)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = paste("prediccion de ", namedb[4]),
x = "Fecha",
y = paste("Precio en la tienda ",sellerdb[4])) +
theme_light()
# Veo si hay corelaccion entre las variables
print(cor.test(Price, DateDB_numeric))
# Ejemplo de como se ve la informacion en el csv
head(DB)
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
# Los indices de los productos
namedb <- (DB$name)
for (x in length(namedb)) {
print(paste("nombre: ",namedb))
}
for (x in length(namedb)) {
print(paste("nombre: ",namedb[x]))
print(paste("precio: ",actualPricedb[x]))
}
actualPricedb <- (DB$actual_price)
for (x in length(namedb)) {
print(paste("nombre: ",namedb[x]))
print(paste("precio: ",actualPricedb[x]))
}
for (x in length(namedb)) {
print(paste("nombre: ",namedb))
print(paste("precio: ",actualPricedb))
}
for (x in length(namedb)) {
print(paste("nombre: ",namedb, " // precio: ",actualPricedb))
}
print(paste("nombre: ",namedb, " // precio: ",actualPricedb))
sellerdb <- (DB$seller)
actualPricedb <- (DB$actual_price)
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
for (x in length(namedb)) {
print(paste("nombre: ",namedb, " // precio: ",actualPricedb))
string_precio <- preciosdb
string_precio
}
for (x in length(namedb)) {
string_precio <- preciosdb
string_precio
}
string_precio <- paste(preciosdb)
print(paste(preciosdb))
print(preciosdb)
preciosdb
preciosdb
clear
for (x in length(namedb)) {
preciosdb
}
for (x in length(namedb)) {
preciosdb
}
for (x in length(namedb)) {
string_precio2 <- preciosdb
print(string_precio2)
}
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
# Los indices de los productos
namedb <- (DB$name)
sellerdb <- (DB$seller)
actualPricedb <- (DB$actual_price)
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
for (x in length(namedb)) {
string_precio <- preciosdb
string_fecha <- fechasdb
print(paste(string_precio, fechasdb, "-----------------------------------------------------------------------------------------------------------------------------------------------------"))
}
for (x in length(namedb)) {
string_precio <- preciosdb
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
string_fecha <- fechasdb
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
print(paste(string_precio, fechasdb, "-----------------------------------------------------------------------------------------------------------------------------------------------------"))
}
for (x in length(namedb)) {
string_precio <- preciosdb
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
string_fecha <- fechasdb
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
print(paste(vectorprecio, vectorfecha, "-----------------------------------------------------------------------------------------------------------------------------------------------------"))
}
for (x in length(namedb)) {
string_precio <- preciosdb
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
string_precio <- as.vector(string_precio)
string_precio <- as.integer(vectorprecio)
string_fecha <- fechasdb
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
string_fecha <- as.vector(string_fecha)
string_fecha <- as.Date(string_fecha, format = "%d/%m")
print(paste(string_precio, fechasdb, "-----------------------------------------------------------------------------------------------------------------------------------------------------"))
}
for (x in length(namedb)) {
string_precio <- preciosdb
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
string_precio <- as.vector(string_precio)
string_precio <- as.integer(vectorprecio)
string_fecha <- fechasdb
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
string_fecha <- as.vector(string_fecha)
string_fecha <- as.Date(string_fecha, format = "%d/%m")
print(paste(string_precio, string_fecha, "-----------------------------------------------------------------------------------------------------------------------------------------------------"))
}
for (x in length(namedb)) {
print(x)
print(paste(string_precio, string_fecha, "-----------------------------------------------------------------------------------------------------------------------------------------------------"))
}
for (x in length(namedb)) {
print(x)
}
for (x in 1:length(namedb)) {
print(x)
}
for (x in 1:length(namedb)) {
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
vectorprecio
}
for (x in 1:length(namedb)) {
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
print(vectorprecio)
}
for (x in 1:length(namedb)) {
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
print(vectorprecio)
print("")
print(vectorfecha)
}
for (x in 1:length(namedb)) {
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
print("")
print(vectorprecio)
print(vectorfecha)
print("")
}
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
# Los indices de los productos
namedb <- (DB$name)
sellerdb <- (DB$seller)
actualPricedb <- (DB$actual_price)
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
# Deserializacion de la informacion
string_precio <- preciosdb
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
fechasdb[x] = vectorfecha
print("")
}
fechasdb
string_fecha <- fechasdb[x]
string_fecha
fechasfactorizado <- c()
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
# Los indices de los productos
namedb <- (DB$name)
sellerdb <- (DB$seller)
actualPricedb <- (DB$actual_price)
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
fechasfactorizado <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
fechasfactorizado <- append(fechasfactorizado, vectorfecha)
fechasdb[x] = vectorfecha
print("")
}
fechasfactorizado
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
# Los indices de los productos
namedb <- (DB$name)
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
fechasfactorizado <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
if (!(vectorfecha %in% fechasfactorizado)) {
fechasfactorizado <- append(fechasfactorizado, vectorfecha)
}
}
fechasfactorizado <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
if (all(!(vectorfecha %in% fechasfactorizado))) {
fechasfactorizado <- append(fechasfactorizado, vectorfecha)
}
}
fechasfactorizado
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
# if (all(!(vectorfecha %in% fechasfactorizado))) {
fechasfactorizado <- append(fechasfactorizado, vectorfecha)
# }
}
fechasfactorizado
preciosfactorizado <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
# if (all(!(vectorfecha %in% fechasfactorizado))) {
fechasfactorizado <- append(fechasfactorizado, vectorfecha)
preciosfactorizado <- append(preciosfactorizado, vectorprecio)
# }
}
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
print(vectorfecha)
print(vectorprecio)
# if (all(!(vectorfecha %in% fechasfactorizado))) {
fechasfactorizado <- append(fechasfactorizado, vectorfecha)
preciosfactorizado <- append(preciosfactorizado, vectorprecio)
# }
}
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
print("")
print(vectorfecha)
print(vectorprecio)
print("")
# if (all(!(vectorfecha %in% fechasfactorizado))) {
fechasfactorizado <- append(fechasfactorizado, vectorfecha)
preciosfactorizado <- append(preciosfactorizado, vectorprecio)
# }
}
rm(list=ls())
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
fechasfactorizado <- c()
preciosfactorizado <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
print("")
print(vectorfecha)
print(vectorprecio)
print("")
# if (all(!(vectorfecha %in% fechasfactorizado))) {
fechasfactorizado <- append(fechasfactorizado, vectorfecha)
preciosfactorizado <- append(preciosfactorizado, vectorprecio)
# }
}
fechasfactorizado
preciosfactorizado
datos <- data.frame(fechasfactorizado, preciosfactorizado)
datos
promedio <- aggregate(preciosfactorizado ~ fechasfactorizado, data = datos, FUN = mean)
promedio
# Hago el grafico de regresion lineal con los datos actuales
ggplot(data=promedio, aes(x=fechasfactorizado, y=preciosfactorizado)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 0.1) +
labs(title = namedb[4],
x = "Fechas",
y = "Precios") +
theme_light()
# Hago el grafico de regresion lineal con los datos actuales
ggplot(data=promedio, aes(x=fechasfactorizado, y=preciosfactorizado)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 0.1) +
labs(title = "Regresion lineal datos actualidad",
x = "Fechas",
y = "Precios") +
theme_light()
# Para usar cor.tests
fechas_numeric <- as.numeric(datos$fechasfactorizado)
fechas_numeric
# Para usar cor.tests
fechas_numeric <- as.numeric(promedio$fechasfactorizado)
fechas_numeric
# Para usar cor.tests
fechas_numeric <- as.numeric(promedio$fechasfactorizado)
# Veo si hay corelaccion entre las variables
print(cor.test(promedio$preciosfactorizado, fechas_numeric))
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(promedio$preciosfactorizado ~ promedio$fechasfactorizado, data = promedio)
model
summary(model)
# Modelo de prediccion
max_fecha <- max(promedio$fechasfactorizado)
max_fecha
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(promedio = seq(max_fecha + 1, by = "day", length.out = 5))
dfDiasFuturos
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, dfDiasFuturos)
pwd()
pwd
pwd
choose.file()
file.choose()
