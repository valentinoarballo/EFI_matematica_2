# Hago el grafico de regresion lineal con los datos actuales
ggplot(data=datos, aes(x=fechas, y=precios)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Regresion lineal datos actualidad",
x = "Fechas",
y = "Precios") +
theme_light()
# Para usar cor.tests
fechas_numeric <- as.numeric(datos$fechas)
fechas_numeric
# Veo si hay corelaccion entre las variables
print(cor.test(datos$precios, fechas_numeric))
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$precios ~ datos$fechas, data = datos)
model
summary(model)
# Modelo de prediccion
max_fecha <- max(datos$fechas)
max_fecha
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechas = seq(max_fecha + 1, by = "day", length.out = 5))
dfDiasFuturos
typeof(dfDiasFuturos)
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, dfDiasFuturos)
dfDiasFuturos
model
model
source("~/itec/matematica/EFI_matematica_2/predictiveModel.r", echo=TRUE)
dfDiasFuturos
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$fechas ~ datos$precios, data = datos)
summary(model)
datos$fechas
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$precios ~ datos$fechas, data = datos)
summary(model)
# Modelo de prediccion
max_fecha <- max(datos$fechas)
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechas = seq(max_fecha + 1, by = "day", length.out = 5))
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, dfDiasFuturos)
predicciones
# Creo un data frame con las fechas futuras y los precios predecidos
dfPredicciones <- data.frame(Price = predicciones, DateDB = dfDiasFuturos$DateDB)
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
fechas <- c()
precios <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
fechas <- append(fechas, vectorfecha)
precios <- append(precios, vectorprecio)
}
datos <- data.frame(fechas, precios)
datos <- aggregate(precios ~ fechas, data = datos, FUN = mean)
# Hago el grafico de regresion lineal con los datos actuales
ggplot(data=datos, aes(x=fechas, y=precios)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Regresion lineal datos actualidad",
x = "Fechas",
y = "Precios") +
theme_light()
# Para usar cor.tests
fechas_numeric <- as.numeric(datos$fechas)
# Veo si hay corelaccion entre las variables
print(cor.test(datos$precios, fechas_numeric))
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$precios ~ datos$fechas, data = datos)
summary(model)
# Modelo de prediccion
max_fecha <- max(datos$fechas)
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechas = seq(max_fecha + 1, by = "day", length.out = 5))
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, dfDiasFuturos)
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechas = dfDiasFuturos)
predicciones
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechas = seq(max_fecha + 1, by = "day", length.out = 5))
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechas = dfDiasFuturos)
# Creo un data frame con las fechas futuras y los precios predecidos
dfPredicciones <- data.frame(Price = predicciones, DateDB = dfDiasFuturos$DateDB)
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechas = dfDiasFuturos)
predicciones
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, dfDiasFuturos = fechas)
predicciones
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechas = dfDiasFuturos)
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechas = dfDiasFuturos, interval = precios)
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechas = dfDiasFuturos)
# Creo un data frame con las fechas futuras y los precios predecidos
dfPredicciones <- data.frame(Price = predicciones, DateDB = dfDiasFuturos$DateDB)
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechas = dfDiasFuturos)
predicciones
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
fechasv <- c()
preciosv <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
fechasv <- append(fechasv, vectorfecha)
preciosv <- append(preciosv, vectorprecio)
}
datos <- data.frame(fechasdf = fechasv, preciosdf = preciosv)
datos
datos <- aggregate(preciosdf ~ fechasdf, data = datos, FUN = mean)
datos
# Hago el grafico de regresion lineal con los datos actuales
ggplot(data=datos, aes(x=fechasdf, y=preciosdf)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Regresion lineal datos actualidad",
x = "Fechas",
y = "Precios") +
theme_light()
# Para usar cor.tests
fechas_numeric <- as.numeric(datos$fechasdf)
# Veo si hay corelaccion entre las variables
print(cor.test(datos$preciosdf, fechas_numeric))
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$preciosdf ~ datos$fechasdf, data = datos)
summary(model)
# Modelo de prediccion
max_fecha <- max(datos$fechasdf)
# Modelo de prediccion
max_fecha <- max(datos$fechasdf)
max_fecha
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
dfDiasFuturos
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechasdf = fechasfuturo)
predicciones
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechasdf %as% fechasfuturo)
dfDiasFuturos
prediccion <- predict(model, as.Date("2023-10-23"))
prediccion
# Ajusto un modelo de regresion lineal en base a los datos
model <- glm(datos$preciosdf ~ datos$fechasdf, data = datos)
model
summary(model)
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
prediccion <- predict(model, as.Date("2023-10-23"))
prediccion
dfculiado <- data.frame(fechaculiada = as.Date("2023-10-23"))
dfculiado
prediccion <- predict(model, fechas = dfculiado)
prediccion
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechasdf = fechasfuturo)
predicciones
prediccion <- predict(model, fechasdf = dfculiado)
prediccion
# Modelo de prediccion
max_fecha <- max(datos$fechasdf)
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechasdf = fechasfuturo)
predicciones
max_fecha
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
dfDiasFuturos
datos$fechasdf
typeof(datos$fechasdf)
typeof(dfDiasFuturos)
typeof(as.double(dfDiasFuturos))
typeof(as.list(datos$fechasdf))
typeof(as.list(datos$fechasdf))
typeof(dfDiasFuturos)
as.list(datos$fechasdf)
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$preciosdf ~ as.list(datos$fechasdf), data = datos)
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$preciosdf ~ datos$fechasdf, data = datos)
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechasdf = dfDiasFuturos)
predicciones
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
dfDiasFuturos <- as.numeric(dfDiasFuturos$fechasfuturo)
predicciones <- predict(model, newdata = data.frame(fechasdf = fechasfuturo))
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
dfDiasFuturos <- as.numeric(dfDiasFuturos$fechasfuturo)
predicciones <- predict(model, newdata = data.frame(fechasdf = fechasfuturo))
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
fechasfuturo <- as.numeric(dfDiasFuturos$fechasfuturo)
predicciones <- predict(model, newdata = data.frame(fechasdf = fechasfuturo))
predicciones
typeof(fechasfuturo)
typeof(datos$fechasdf)
fechasfuturo
datos$fechasdf
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
fechasfuturo <- as.numeric(dfDiasFuturos$fechasfuturo)
predicciones <- predict(model, newdata = data.frame(fechasdf = fechasfuturo))
predicciones
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
fechasv <- c()
preciosv <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
fechasv <- append(fechasv, vectorfecha)
preciosv <- append(preciosv, vectorprecio)
}
datos <- data.frame(fechasdf = fechasv, preciosdf = preciosv)
datos <- aggregate(preciosdf ~ fechasdf, data = datos, FUN = mean)
# Hago el grafico de regresion lineal con los datos actuales
ggplot(data=datos, aes(x=fechasdf, y=preciosdf)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Regresion lineal datos actualidad",
x = "Fechas",
y = "Precios") +
theme_light()
# Para usar cor.tests
fechas_numeric <- as.numeric(datos$fechasdf)
# Veo si hay corelaccion entre las variables
print(cor.test(datos$preciosdf, fechas_numeric))
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$preciosdf ~ datos$fechasdf, data = datos)
summary(model)
# Modelo de prediccion
max_fecha <- max(datos$fechasdf)
max_fecha
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
dfDiasFuturos
fechasfuturo <- as.numeric(dfDiasFuturos$fechasfuturo)
fechasfuturo
predicciones <- predict(model, newdata = data.frame(fechasdf = fechasfuturo))
predicciones
fechasdf = dfDiasFuturos$fechasfuturo
predicciones <- predict(model, newdata = data.frame(fechasdf = dfDiasFuturos$fechasfuturo))
predicciones
predicciones <- predict(model, newdata = data.frame(as.Date(fechasdf = dfDiasFuturos$fechasfuturo)))
predicciones
data.frame(fechasdf = fechasfuturo)
# Grafico con las predicciones
ggplot(data=prediccionData, aes(x=DateDB, y=Price)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = paste("prediccion de ", namedb[4]),
x = "Fecha",
y = paste("Precio en la tienda ",sellerdb[4])) +
theme_light()
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
# Los indices de los productos
# namedb <- (DB$name)
# sellerdb <- (DB$seller)
# actualPricedb <- (DB$actual_price)
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
fechasv <- c()
preciosv <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
fechasv <- append(fechasv, vectorfecha)
preciosv <- append(preciosv, vectorprecio)
}
datos <- data.frame(fechasdf = fechasv, preciosdf = preciosv)
datos <- aggregate(preciosdf ~ fechasdf, data = datos, FUN = mean)
datos
datos$fechasdf
datos$preciosdf
dfdf <- data.frame(fech, pre)
fech <- datos$fechasdf
pre <- datos$preciosdf
dfdf <- data.frame(fech, pre)
dfdf
dfdf$fech
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
file.choose()
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
# Los indices de los productos
# namedb <- (DB$name)
# sellerdb <- (DB$seller)
# actualPricedb <- (DB$actual_price)
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
fechasv <- c()
preciosv <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
fechasv <- append(fechasv, vectorfecha)
preciosv <- append(preciosv, vectorprecio)
}
datos <- data.frame(fechasdf = fechasv, preciosdf = preciosv)
datos <- aggregate(preciosdf ~ fechasdf, data = datos, FUN = mean)
# Hago el grafico de regresion lineal con los datos actuales
ggplot(data=datos, aes(x=fechasdf, y=preciosdf)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Regresion lineal datos actualidad",
x = "Fechas",
y = "Precios") +
theme_light()
# Para usar cor.tests
fechas_numeric <- as.numeric(datos$fechasdf)
# Veo si hay corelaccion entre las variables
print(cor.test(datos$preciosdf, fechas_numeric))
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$preciosdf ~ datos$fechasdf, data = datos)
summary(model)
# Modelo de prediccion
max_fecha <- max(datos$fechasdf)
# Creo un data frame con los 5 dias posteriores a la ultima fecha con registro
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 5))
View(model)
rm(list=ls())
# Importo la libreria ggplot2
library(ggplot2)
file.choose()
# Importo la libreria ggplot2
library(ggplot2)
# Asignacion de los datos en una variable, TRUE por que la primer linea son los titulos y "," porque se separan por ,
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
DB <- read.csv("/home/valen/itec/matematica/EFI_matematica_2/elbueno.csv", TRUE, ";")
# Los indices de los productos
# namedb <- (DB$name)
# sellerdb <- (DB$seller)
# actualPricedb <- (DB$actual_price)
fechasdb <- (DB$json_fechas)
preciosdb <- (DB$json_precios)
fechasv <- c()
preciosv <- c()
for (x in 1:length(fechasdb)) {
string_fecha <- fechasdb[x]
string_fecha <- substring(string_fecha, 2, nchar(string_fecha) -1)
string_fecha <- gsub("\"", "", string_fecha)
string_fecha <- strsplit(string_fecha, ",")[[1]]
vectorfecha <- as.vector(string_fecha)
vectorfecha <- as.Date(string_fecha, format = "%d/%m")
string_precio <- preciosdb[x]
string_precio <- substring(string_precio, 2, nchar(string_precio) -1)
string_precio <- strsplit(string_precio, ",")[[1]]
vectorprecio <- as.vector(string_precio)
vectorprecio <- as.integer(vectorprecio)
fechasv <- append(fechasv, vectorfecha)
preciosv <- append(preciosv, vectorprecio)
}
datos <- data.frame(fechasdf = fechasv, preciosdf = preciosv)
datos <- aggregate(preciosdf ~ fechasdf, data = datos, FUN = mean)
# Hago el grafico de regresion lineal con los datos actuales
ggplot(data=datos, aes(x=fechasdf, y=preciosdf)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Regresion lineal datos actualidad",
x = "Fechas",
y = "Precios") +
theme_dark()
# Hago el grafico de regresion lineal con los datos actuales
ggplot(data=datos, aes(x=fechasdf, y=preciosdf)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Regresion lineal datos actualidad",
x = "Fechas",
y = "Precios") +
theme_light()
cat("La prediccion en base a los datos actuales")
# Ultimo registro
max_fecha <- max(datos$fechasdf)
# Creo un data frame con 10 registros posteriores a el ultimo
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 10))
datos$fechasdf
dfDiasFuturos$fechasfuturo
typeof(datos$fechasdf)
typeof(dfDiasFuturos$fechasfuturo)
predicciones <- predict(model, newdata = data.frame(fechasdf = dfDiasFuturos$fechasfuturo))
cat("Para chequear la fuerza de la correlacion")
# Para usar cor.tests
fechas_numeric <- as.numeric(datos$fechasdf)
# Veo si hay corelaccion entre las variables
print(cor.test(datos$preciosdf, fechas_numeric))
# Ajusto un modelo de regresion lineal en base a los datos
model <- lm(datos$preciosdf ~ datos$fechasdf, data = datos)
summary(model)
cat("La prediccion en base a los datos actuales")
# Ultimo registro
max_fecha <- max(datos$fechasdf)
# Creo un data frame con 10 registros posteriores a el ultimo
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 10))
typeof(datos$fechasdf)
typeof(dfDiasFuturos$fechasfuturo)
predicciones <- predict(model, newdata = data.frame(fechasdf = dfDiasFuturos$fechasfuturo))
# Prediccion precios en base a los dias futuros
predicciones <- predict(model, fechasdf = dfDiasFuturos)
predicciones
predicciones <- predict(model, newdata = data.frame(fechasdf = dfDiasFuturos$fechasfuturo))
predicciones
typeof(dfDiasFuturos$fechasfuturo)
typeof(datos$fechasdf)
predicciones <- predict(model, newdata = data.frame(fechasdf = dfDiasFuturos$fechasfuturo))
predicciones
# Creo un data frame con las fechas futuras y los precios predecidos
dfPredicciones <- data.frame(Price = predicciones, DateDB = dfDiasFuturos$DateDB)
# Grafico con las predicciones
ggplot(data=predicciondf, aes(x=fechasdf, y=preciosdf)) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(size = 1) +
labs(title = "Prediccion de precios",
x = "Fechas",
y = "Precios ") +
theme_light()
# Creo un data frame con las fechas futuras y los precios predecidos
predicciondf <- data.frame(preciosdf = predicciones, fechasdf = dfDiasFuturos$fechasfuturo)
predicciondf
predicciones
dfDiasFuturos
# Creo un data frame con 10 registros posteriores a el ultimo
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 15))
dfDiasFuturos
# Creo un data frame con 10 registros posteriores a el ultimo
dfDiasFuturos <- data.frame(fechasfuturo = seq(max_fecha + 1, by = "day", length.out = 10))
dfDiasFuturos
typeof(datos$fechasdf)
typeof(dfDiasFuturos$fechasfuturo)
dfDiasFuturos$fechasfuturo
datos$fechasdf
fechasv
fechasv
